{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "API",
      "description": "Endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "x-api-key",
      "description": "any description..."
    },
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "authorization",
      "description": "Input example:Bearer JWT_TOKEN"
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/company/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "company_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/company/{companyName}/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "companyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "companyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/company/{companyName}/journals": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "companyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/company/{companyName}/posts": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "companyName",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/user/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/user/register": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "login": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/user/refreshToken": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/journal/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "company_name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/journal/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/journal/{id}/addPost": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/post/": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/post/{id}": {
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/timeline/posts": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/timeline/post/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/timeline/journals": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/timeline/journal/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      }
    },
    "/profile/{id}": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {}
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "photo": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "User"
        },
        "username": {
          "type": "string",
          "example": "username"
        },
        "email": {
          "type": "string",
          "example": "usermail@mail.com"
        },
        "password": {
          "type": "number",
          "example": 123456
        },
        "parents": {
          "$ref": "#/definitions/Parents"
        }
      }
    },
    "Admin": {
      "type": "object",
      "properties": {
        "user_id": {
          "$ref": "#/definitions/User"
        },
        "journal_id": {
          "$ref": "#/definitions/Journal"
        }
      },
      "required": [
        "user_id",
        "journal_id"
      ]
    },
    "Journal": {
      "type": "object",
      "properties": {
        "admin_id": {
          "$ref": "#/definitions/Admin"
        },
        "moderator_id": {
          "$ref": "#/definitions/Moderator"
        },
        "author_id": {
          "$ref": "#/definitions/Author"
        },
        "post_list": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "journal_num": {
          "type": "number",
          "example": 1
        },
        "followers": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "subscribers": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "confirmation": {
          "type": "boolean",
          "example": false
        }
      },
      "required": [
        "admin_id",
        "moderator_id",
        "author_id"
      ]
    },
    "Author": {
      "type": "object",
      "properties": {
        "user_id": {
          "$ref": "#/definitions/User"
        },
        "followers": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "journal_id": {
          "$ref": "#/definitions/Journal"
        },
        "admin_id": {
          "$ref": "#/definitions/Admin"
        },
        "task": {
          "type": "string",
          "example": "task"
        },
        "post_list": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "reject_list": {
          "type": "array",
          "example": [],
          "items": {}
        }
      },
      "required": [
        "user_id",
        "journal_id",
        "admin_id"
      ]
    },
    "Moderator": {
      "type": "object",
      "properties": {
        "user_id": {
          "$ref": "#/definitions/User"
        },
        "followers": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "journal_id": {
          "$ref": "#/definitions/Journal"
        },
        "admin_id": {
          "$ref": "#/definitions/Admin"
        }
      },
      "required": [
        "user_id",
        "journal_id",
        "admin_id"
      ]
    },
    "Post": {
      "type": "object",
      "properties": {
        "cover": {
          "type": "string",
          "example": "cover"
        },
        "title": {
          "type": "string",
          "example": "title"
        },
        "slug": {
          "type": "string",
          "example": "slug"
        },
        "description": {
          "type": "string",
          "example": "desc"
        },
        "date": {
          "type": "string",
          "example": "12.12.23"
        },
        "author_id": {
          "$ref": "#/definitions/Author"
        },
        "tags": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "category": {
          "type": "string",
          "example": "category"
        },
        "likes": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "status": {
          "type": "string",
          "example": "draft"
        },
        "post_type": {
          "type": "string",
          "example": "mostCommented"
        },
        "content": {
          "type": "string",
          "example": "content"
        }
      },
      "required": [
        "author_id"
      ]
    },
    "Profile": {
      "type": "object",
      "properties": {
        "user_id": {
          "$ref": "#/definitions/User"
        },
        "name": {
          "type": "string",
          "example": "name"
        },
        "surname": {
          "type": "string",
          "example": "surname"
        },
        "photo": {
          "type": "string",
          "example": "1.png"
        },
        "gender": {
          "type": "string",
          "example": "women"
        },
        "interests": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "subscription_journal": {
          "type": "array",
          "example": [],
          "items": {}
        },
        "followed": {
          "type": "array",
          "example": [],
          "items": {}
        }
      },
      "required": [
        "user_id"
      ]
    },
    "Thread": {
      "type": "object",
      "properties": {
        "post_id": {
          "$ref": "#/definitions/Post"
        },
        "date": {
          "type": "string",
          "example": "11.12.23"
        },
        "vote": {
          "type": "number",
          "example": 1
        },
        "comment_lists": {
          "type": "array",
          "example": [],
          "items": {}
        }
      },
      "required": [
        "post_id"
      ]
    }
  },
  "security": [
    {
      "apiKeyAuth": []
    },
    {
      "bearerAuth": []
    }
  ]
}