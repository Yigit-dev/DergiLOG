const swaggerAutogen = require('swagger-autogen')()
const doc = {
  info: {
    version: '1.0.0',
    title: 'My API',
    description: 'Documentation automatically generated by the <b>swagger-autogen</b> module.',
  },
  host: 'localhost:3000',
  basePath: '/',
  schemes: ['http', 'https'],
  consumes: ['application/json'],
  produces: ['application/json'],
  tags: [
    {
      name: 'API',
      description: 'Endpoints',
    },
  ],
  security: [{ apiKeyAuth: [] }, { bearerAuth: [] }],
  securityDefinitions: {
    apiKeyAuth: {
      type: 'apiKey',
      in: 'header', // can be "header", "query" or "cookie"
      name: 'x-api-key', // name of the header, query parameter or cookie
      description: 'any description...',
    },
    bearerAuth: {
      type: 'apiKey',
      in: 'header',
      name: 'authorization',
      description: 'Input example:Bearer JWT_TOKEN',
    },
  },
  definitions: {
    User: {
      role: 'User',
      username: 'username',
      email: 'usermail@mail.com',
      password: 123456,
      parents: {
        $ref: '#/definitions/Parents',
      },
    },
    Admin: {
      $user_id: {
        $ref: '#/definitions/User',
      },
      $journal_id: {
        $ref: '#/definitions/Journal',
      },
    },
    Journal: {
      $admin_id: {
        $ref: '#/definitions/Admin',
      },
      $moderator_id: {
        $ref: '#/definitions/Moderator',
      },
      $author_id: {
        $ref: '#/definitions/Author',
      },
      post_list: [],
      journal_num: 1,
      followers: [],
      subscribers: [],
      confirmation: false,
    },
    Author: {
      $user_id: {
        $ref: '#/definitions/User',
      },
      followers: [],
      $journal_id: {
        $ref: '#/definitions/Journal',
      },
      $admin_id: {
        $ref: '#/definitions/Admin',
      },
      task: 'task',
      post_list: [],
      reject_list: [],
    },
    Moderator: {
      $user_id: {
        $ref: '#/definitions/User',
      },
      followers: [],
      $journal_id: {
        $ref: '#/definitions/Journal',
      },
      $admin_id: {
        $ref: '#/definitions/Admin',
      },
    },
    Post: {
      cover: 'cover',
      title: 'title',
      slug: 'slug',
      description: 'desc',
      date: Date.now(),
      $author_id: {
        $ref: '#/definitions/Author',
      },
      tags: [],
      category: 'category',
      likes: [],
      status: 'draft',
      post_type: 'mostCommented',
      content: 'content',
    },
    Profile: {
      $user_id: {
        $ref: '#/definitions/User',
      },
      name: 'name',
      surname: 'surname',
      photo: '1.png',
      gender: 'women',
      interests: [],
      subscription_journal: [],
      followed: [],
    },
    Thread: {
      $post_id: {
        $ref: '#/definitions/Post',
      },
      date: Date.now(),
      vote: 1,
      comment_lists: [],
    },
  },
}

const outputFile = '././swagger-output.json'
const endpointsFiles = ['./src/routes/index.js']

swaggerAutogen(outputFile, endpointsFiles, doc).then(require('../app.js'))
